{"version":3,"sources":["contracts/keys.ts","assets/FullLogo.png","Home/components/Header.js","contracts/idl.ts","contracts/utils.ts","contracts/bean.ts","providers/ContractProvider.js","components/PriceInput.jsx","Home/components/BakeCard.js","Home/components/NutritionFacts.js","Home/components/ReferralLink.js","Home/components/Footer.js","Home/index.js","assets/background.png","components/wallet/Wallets.js","App.js","reportWebVitals.js","Theme.js","index.js","contracts/constants.ts"],"names":["getGlobalStateKey","a","asyncGetPda","Buffer","from","GLOBAL_STATE_SEED","PROGRAM_ID","globalStateKey","getVaultKey","VAULT_SEED","vaultKey","getUserStateKey","userKey","USER_STATE_SEED","toBuffer","userStateKey","seeds","programId","PublicKey","findProgramAddress","pubKey","bump","Wrapper","styled","theme","textAlign","paddingBottom","breakpoints","down","h5","fontSize","margin","Header","src","logo","alt","width","Typography","variant","marginTop","IDL","showToast","txt","duration","ty","type","toast","TYPE","SUCCESS","ERROR","INFO","autoClose","error","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","connection","Connection","clusterApiUrl","Constants","getProgram","wallet","provider","anchor","defaultOptions","getGlobalStateData","program","keys","account","globalState","fetchNullable","stateData","getWalletSolBalance","publicKey","getBalance","x","console","log","BigNumber","div","LAMPORTS_PER_SOL","toString","getVaultSolBalance","getUserData","vaultBal","userState","globalData","secondsPassed","Math","min","eggsPerMiner","toNumber","Date","now","lastHatchTime","claimedEggs","toBase58","user","miners","myEggs","add","BN","mul","marketEggs","beanRewards","calculateTrade","psn","psnh","rt","rs","bs","PSN","PSNH","y","initialize","WalletNotConnectedError","Transaction","methods","SystemProgram","SYSVAR_RENT_PUBKEY","authority","treasury","vault","systemProgram","rent","accounts","instruction","tx","send","buyEggs","referralKey","solAmount","fetch","buyIx","getHatchIx","hatchIx","r","equals","hatchEggs","referral","referralState","ix","sellEggs","transaction","sendTransaction","txHash","confirming_id","confirmTransaction","res","dismiss","value","err","signTransaction","getLatestBlockhash","recentBlockhash","blockhash","feePayer","signedTransaction","rawTransaction","serialize","sendRawTransaction","skipPreflight","preflightCommitment","txid","ContractContext","createContext","minersCount","walletSolBalance","contractSolBalance","toggleDataUpdate","ContractProvider","children","useState","setMinersCount","setBeanRewards","setWalletSolBalance","setContractSolBalance","dataUpdate","setDataUpdate","useWallet","useEffect","then","bal","data","Provider","SolInput","fontWeight","padding","borderRadius","border","background","outline","WebkitAppearance","MozAppearance","PriceInput","max","onChange","Box","e","target","top","right","color","CardWrapper","Card","marginBottom","ButtonContainer","Grid","flexDirection","marginLeft","marginRight","UnderlinedGrid","borderBottom","BakeCard","address","bakeSOL","setBakeSOL","loading","setLoading","query","URLSearchParams","useLocation","search","setAdminKey","setTimeout","getRef","get","initializeProgram","bake","ref","reBake","eatBeans","LinearProgress","CardContent","container","justifyContent","alignItems","mt","paddingTop","onUpdateBakeSOL","Button","fullWidth","onClick","hidden","className","disabled","Divider","item","flexGrow","nutritionFacts","label","NutritionFacts","map","f","gutterBottom","style","display","height","borderTop","Input","palette","primary","main","ReferralLink","link","window","origin","paddingLeft","paddingRight","readOnly","paddingX","Footer","spacing","maxWidth","WalletButton","Home","newestOnTop","rtl","pauseOnFocusLoss","Wallets","endpoint","useMemo","useLocalStorage","autoConnect","wallets","getPhantomWallet","getSolflareWallet","getTorusWallet","options","clientId","getLedgerWallet","getSolongWallet","getMathWallet","getSolletWallet","getCoin98Wallet","getBitpieWallet","enqueueSnackbar","useSnackbar","onError","useCallback","message","name","ConnectionProvider","WalletProvider","App","paddingY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","secondary","text","typography","fontFamily","body1","body2","allVariants","h4","components","MuiCard","styleOverrides","root","boxShadow","MuiCardContent","MuiButton","minWidth","contained","containedSecondary","Theme","ThemeProvider","ReactDOM","render","CssBaseline","document","getElementById","NETWORK","TREASURY"],"mappings":"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","file":"static/js/main.4e02b20c.chunk.js","sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\nimport {\n  GLOBAL_STATE_SEED,\n  VAULT_SEED,\n  USER_STATE_SEED,\n  PROGRAM_ID,\n} from \"./constants\";\n\nexport const getGlobalStateKey = async () => {\n  const [globalStateKey] = await asyncGetPda(\n    [Buffer.from(GLOBAL_STATE_SEED)],\n    PROGRAM_ID\n  );\n  return globalStateKey;\n};\n\nexport const getVaultKey = async () => {\n  const [vaultKey] = await asyncGetPda(\n    [Buffer.from(VAULT_SEED)],\n    PROGRAM_ID\n  );\n  return vaultKey;\n};\n\nexport const getUserStateKey = async (userKey: PublicKey) => {\n  const [userStateKey] = await asyncGetPda(\n    [Buffer.from(USER_STATE_SEED), userKey.toBuffer()],\n    PROGRAM_ID\n  );\n  return userStateKey;\n};\n\nconst asyncGetPda = async (\n  seeds: Buffer[],\n  programId: PublicKey\n): Promise<[PublicKey, number]> => {\n  const [pubKey, bump] = await PublicKey.findProgramAddress(seeds, programId);\n  return [pubKey, bump];\n};\n","export default __webpack_public_path__ + \"static/media/FullLogo.70191f06.png\";","import Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/system\";\nimport logo from \"../../assets/FullLogo.png\";\n\nconst Wrapper = styled(\"div\")(({ theme }) => ({\n  textAlign: \"center\",\n  paddingBottom: 24,\n  [theme.breakpoints.down(\"md\")]: {\n    h5: {\n      fontSize: 20,\n      margin: 0,\n    },\n  },\n}));\n\nexport default function Header() {\n  return (\n    <Wrapper>\n      <img src={logo} alt=\"\" width={\"70%\"} />\n      <hr />\n      <Typography variant=\"h7\" marginTop={-3}>\n        <b>The SOL reward pool with the richest daily return and lowest dev fee</b>\n      </Typography>\n    </Wrapper>\n  );\n}\n","export type BakedBeans = {\n  \"version\": \"0.1.0\",\n  \"name\": \"baked_beans\",\n  \"instructions\": [\n    {\n      \"name\": \"initialize\",\n      \"accounts\": [\n        {\n          \"name\": \"authority\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"globalState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"treasury\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"rent\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"newAuthority\",\n          \"type\": \"publicKey\"\n        }\n      ]\n    },\n    {\n      \"name\": \"buyEggs\",\n      \"accounts\": [\n        {\n          \"name\": \"user\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"globalState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"treasury\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"userState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"rent\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"sellEggs\",\n      \"accounts\": [\n        {\n          \"name\": \"user\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"globalState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"treasury\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"userState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"hatchEggs\",\n      \"accounts\": [\n        {\n          \"name\": \"user\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"globalState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"userState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"referral\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"referralState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"rent\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"globalState\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"isInitialized\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"vault\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"treasury\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"marketEggs\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"devFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"psn\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"psnh\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"eggsPerMiner\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"userState\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"isInitialized\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"user\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"lastHatchTime\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"claimedEggs\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"miners\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"referral\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"referralSet\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": 6000,\n      \"name\": \"NotAllowedAuthority\",\n      \"msg\": \"Not allowed authority\"\n    },\n    {\n      \"code\": 6001,\n      \"name\": \"InsufficientAmount\",\n      \"msg\": \"Should be over minimum amount\"\n    },\n    {\n      \"code\": 6002,\n      \"name\": \"IncorrectUserState\",\n      \"msg\": \"Incorrect User State\"\n    },\n    {\n      \"code\": 6003,\n      \"name\": \"IncorrectReferral\",\n      \"msg\": \"Incorrect Referral Pubkey\"\n    }\n  ]\n};\n\nexport const IDL: BakedBeans = {\n  \"version\": \"0.1.0\",\n  \"name\": \"baked_beans\",\n  \"instructions\": [\n    {\n      \"name\": \"initialize\",\n      \"accounts\": [\n        {\n          \"name\": \"authority\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"globalState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"treasury\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"rent\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"newAuthority\",\n          \"type\": \"publicKey\"\n        }\n      ]\n    },\n    {\n      \"name\": \"buyEggs\",\n      \"accounts\": [\n        {\n          \"name\": \"user\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"globalState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"treasury\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"userState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"rent\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"sellEggs\",\n      \"accounts\": [\n        {\n          \"name\": \"user\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"globalState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"treasury\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"userState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"hatchEggs\",\n      \"accounts\": [\n        {\n          \"name\": \"user\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"globalState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"userState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"referral\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"referralState\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"rent\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"globalState\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"isInitialized\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"authority\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"vault\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"treasury\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"marketEggs\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"devFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"psn\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"psnh\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"eggsPerMiner\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"userState\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"isInitialized\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"user\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"lastHatchTime\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"claimedEggs\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"miners\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"referral\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"referralSet\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": 6000,\n      \"name\": \"NotAllowedAuthority\",\n      \"msg\": \"Not allowed authority\"\n    },\n    {\n      \"code\": 6001,\n      \"name\": \"InsufficientAmount\",\n      \"msg\": \"Should be over minimum amount\"\n    },\n    {\n      \"code\": 6002,\n      \"name\": \"IncorrectUserState\",\n      \"msg\": \"Incorrect User State\"\n    },\n    {\n      \"code\": 6003,\n      \"name\": \"IncorrectReferral\",\n      \"msg\": \"Incorrect Referral Pubkey\"\n    }\n  ]\n};\n","import { toast } from \"react-toastify\";\n\nexport const showToast = (\n  txt: string,\n  duration: number = 5000,\n  ty: number = 0\n) => {\n  let type = toast.TYPE.SUCCESS;\n  if (ty === 1) type = toast.TYPE.ERROR;\n  if (ty === 2) type = toast.TYPE.INFO;\n\n  let autoClose: any = duration;\n  if (duration < 0) {\n    autoClose = false;\n  }\n  return toast.error(txt, {\n    position: \"bottom-left\",\n    autoClose,\n    hideProgressBar: false,\n    closeOnClick: false,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    type,\n    theme: \"colored\",\n  });\n};","import * as anchor from \"@project-serum/anchor\";\nimport {BN} from \"@project-serum/anchor\";\nimport {\n  PublicKey,\n  Keypair,\n  Connection,\n  Transaction,\n  clusterApiUrl,\n  SystemProgram,\n  SYSVAR_RENT_PUBKEY,\n  TransactionSignature,\n  TransactionInstruction,\n  LAMPORTS_PER_SOL,\n} from \"@solana/web3.js\";\n\nimport { BigNumber } from \"bignumber.js\";\n\nimport { WalletContextState } from \"@solana/wallet-adapter-react\";\n\nimport * as Constants from \"./constants\";\nimport { IDL } from \"./idl\";\nimport { showToast } from \"./utils\";\nimport { toast } from 'react-toastify';\nimport * as keys from \"./keys\";\nimport { WalletNotConnectedError } from \"@solana/wallet-adapter-base\";\n\nconst connection = new Connection(clusterApiUrl(Constants.NETWORK));\nexport const getProgram = (wallet: any) => {\n  let provider = new anchor.Provider(\n    connection,\n    wallet,\n    anchor.Provider.defaultOptions()\n  );\n  const program = new anchor.Program(IDL, Constants.PROGRAM_ID, provider);\n  return program;\n};\nexport const getGlobalStateData = async (wallet: any) => {\n  const program = getProgram(wallet);\n  const globalStateKey = await keys.getGlobalStateKey();\n  const stateData = await program.account.globalState.fetchNullable(\n    globalStateKey\n  );\n  if (stateData === null) return null;\n  return stateData;\n};\n\nexport const getWalletSolBalance = async (wallet: any): Promise<String> => {\n  if (wallet.publicKey === null || wallet.publicKey === undefined) return \"0\";\n  let x = await connection.getBalance(wallet.publicKey);\n  console.log('getWalletSolBalance x=', x);\n  return new BigNumber(await connection.getBalance(wallet.publicKey)).div(\n    LAMPORTS_PER_SOL\n  ).toString();\n};\n\nexport const getVaultSolBalance = async (wallet: any): Promise<String> => {\n  if (wallet.publicKey === null || wallet.publicKey === undefined) return \"0\";\n  const program = getProgram(wallet);\n  const vaultKey = await keys.getVaultKey();\n  return new BigNumber(await connection.getBalance(vaultKey)).div(\n    LAMPORTS_PER_SOL\n  ).toString();\n};\n\nexport const getUserData = async (wallet: any): Promise<any> => {\n  if (wallet.publicKey === null || wallet.publicKey === undefined) return null;\n  console.log(\"getUserData\");\n  const program = getProgram(wallet);\n  \n  const vaultKey = await keys.getVaultKey();\n  const vaultBal = await connection.getBalance(vaultKey);\n\n  let userStateKey = await keys.getUserStateKey(wallet.publicKey);\n  \n  const stateData = await program.account.userState.fetchNullable(\n    userStateKey\n  );\n  if (stateData === null) return null;\n\n  const globalStateKey = await keys.getGlobalStateKey();\n  const globalData = await program.account.globalState.fetchNullable(\n    globalStateKey\n  );\n  if (globalData === null) return null;\n  // getEggsSinceLastHatch\n  let secondsPassed = Math.min(globalData.eggsPerMiner.toNumber(), Date.now()/1000 - stateData.lastHatchTime.toNumber());\n  console.log('stateData.claimedEggs.toNumber() =', stateData.claimedEggs.toNumber());\n  console.log('secondsPassed =', secondsPassed);\n  console.log(\"userStateKey =\", userStateKey.toBase58());\n  console.log('stateData =', stateData);\n  console.log('stateData.user =', stateData.user.toBase58());\n  console.log('stateData.miners =', stateData.miners.toNumber());\n  let myEggs = stateData.claimedEggs.add(new BN(secondsPassed).mul(stateData.miners));\n  console.log('myEggs =', myEggs.toNumber());\n  console.log('globalData.marketEggs =', globalData.marketEggs.toNumber());\n  console.log('new BN(vaultBal) =', new BN(vaultBal).toNumber());\n  let beanRewards = calculateTrade(myEggs, globalData.marketEggs, new BN(vaultBal), globalData.psn, globalData.psnh);\n\n  return {\n    miners: stateData.miners.toString(),\n    beanRewards: new BigNumber(beanRewards.toString()).div(\n      LAMPORTS_PER_SOL\n    ).toString()\n  }\n};\nfunction calculateTrade(rt: BN, rs: BN, bs: BN, PSN: BN, PSNH: BN) {\n    if (rt.toNumber() === 0) return new BN(0);\n    console.log('calcTrade');\n    console.log(rt.toNumber());\n    console.log(rs.toNumber());\n    console.log(bs.toNumber());\n    console.log(PSN.toNumber());\n    console.log(PSNH.toNumber());\n    let x = PSN.mul(bs);\n    let y = PSNH.add(PSN.mul(rs).add(PSNH.mul(rt)).div(rt));\n    console.log('calcTrade');\n    console.log(x.toNumber());\n    console.log(y.toNumber());\n    return x.div(y);\n}\nexport const initialize = async (\n  wallet: WalletContextState,\n): Promise<string | null> => {\n  if (wallet.publicKey === null) throw new WalletNotConnectedError();\n  \n  const program = getProgram(wallet);\n  const tx = new Transaction().add(\n    await program.methods\n        .initialize(wallet.publicKey) // new_authority\n        .accounts({\n          authority: wallet.publicKey,\n          globalState: await keys.getGlobalStateKey(),\n          treasury: wallet.publicKey,\n          vault: await keys.getVaultKey(),\n          systemProgram: SystemProgram.programId,\n          rent: SYSVAR_RENT_PUBKEY\n        })\n        .instruction()\n  );\n  return await send(connection, wallet, tx);\n};\n\nexport const buyEggs = async (\n  wallet: WalletContextState,\n  referralKey: PublicKey,\n  solAmount: number\n): Promise<string | null> => {\n  if (wallet.publicKey === null || wallet.publicKey === undefined) throw new WalletNotConnectedError();\n  \n  const program = getProgram(wallet);\n  let globalStateKey = await keys.getGlobalStateKey();\n  let globalData = await program.account.globalState.fetch(globalStateKey);\n  let vaultKey = await keys.getVaultKey();\n  let buyIx = await program.methods\n    .buyEggs(new anchor.BN(solAmount * LAMPORTS_PER_SOL))\n    .accounts({\n      user: wallet.publicKey,\n      globalState: globalStateKey,\n      treasury: globalData.treasury,\n      vault: vaultKey,\n      userState: await keys.getUserStateKey(wallet.publicKey),\n      systemProgram: SystemProgram.programId,\n      rent: SYSVAR_RENT_PUBKEY\n    })\n    .instruction();\n  \n  let hatchIx = await getHatchIx(program, wallet.publicKey, referralKey);\n  let tx = new Transaction();\n  tx.add(buyIx);\n  tx.add(hatchIx);\n  return await send(connection, wallet, tx);\n};\n\nexport const getHatchIx = async (\n  program: any,\n  userKey: PublicKey,\n  referralKey: PublicKey\n): Promise<TransactionInstruction> => {\n  let r = referralKey;\n  if (referralKey.equals(userKey)) {\n    r = Constants.TREASURY;\n  }\n  let ix = await program.methods\n    .hatchEggs()\n    .accounts({\n      user: userKey,\n      globalState: await keys.getGlobalStateKey(),\n      vault: await keys.getVaultKey(),\n      userState: await keys.getUserStateKey(userKey),\n      referral: r,\n      referralState: await keys.getUserStateKey(r),\n    })\n    .instruction()\n  return ix;\n};\n\nexport const hatchEggs = async (\n  wallet: WalletContextState,\n  referralKey: PublicKey\n): Promise<string | null> => {\n  if (wallet.publicKey === null || wallet.publicKey === undefined) throw new WalletNotConnectedError();\n  \n  const program = getProgram(wallet);\n  const tx = new Transaction().add(\n    await getHatchIx(program, wallet.publicKey, referralKey)\n  );\n  return await send(connection, wallet, tx);\n};\n\n\nexport const sellEggs = async (\n  wallet: WalletContextState,\n): Promise<string | null> => {\n  if (wallet.publicKey === null || wallet.publicKey === undefined) throw new WalletNotConnectedError();\n  \n  const program = getProgram(wallet);\n  let globalStateKey = await keys.getGlobalStateKey();\n  let globalData = await program.account.globalState.fetch(globalStateKey);\n  let vaultKey = await keys.getVaultKey();\n  const tx = new Transaction().add(\n    await program.methods\n      .sellEggs()\n      .accounts({\n        user: wallet.publicKey,\n        globalState: globalStateKey,\n        treasury: globalData.treasury,\n        vault: vaultKey,\n        userState: await keys.getUserStateKey(wallet.publicKey),\n        systemProgram: SystemProgram.programId\n      })\n      .instruction()\n  );\n  return await send(connection, wallet, tx);\n};\n\nasync function send(\n  connection: Connection,\n  wallet: WalletContextState,\n  transaction: Transaction\n) {\n  const txHash = await sendTransaction(connection, wallet, transaction);\n  if (txHash != null) {\n    let confirming_id = showToast(\"Confirming Transaction ...\", -1, 2);\n    let res = await connection.confirmTransaction(txHash);\n    console.log(txHash);\n    toast.dismiss(confirming_id);\n    if (res.value.err) showToast(\"Transaction Failed\", 2000, 1);\n    else showToast(\"Transaction Confirmed\", 2000);\n  } else {\n    showToast(\"Transaction Failed\", 2000, 1);\n  }\n  return txHash;\n}\n\n\nexport async function sendTransaction(\n  connection: Connection,\n  wallet: WalletContextState,\n  transaction: Transaction\n) {\n  if (wallet.publicKey === null || wallet.signTransaction === undefined)\n    return null;\n  try {\n    transaction.recentBlockhash = (\n      await connection.getLatestBlockhash()\n    ).blockhash;\n    transaction.feePayer = wallet.publicKey;\n    const signedTransaction = await wallet.signTransaction(transaction);\n    const rawTransaction = signedTransaction.serialize();\n\n    showToast(\"Sending Transaction ...\", 500);\n    // notify({\n    //   message: \"Transaction\",\n    //   description: \"Sending Transaction ...\",\n    //   duration: 0.5,\n    // });\n\n    const txid: TransactionSignature = await connection.sendRawTransaction(\n      rawTransaction,\n      {\n        skipPreflight: true,\n        preflightCommitment: \"processed\",\n      }\n    );\n    return txid;\n  } catch (e) {\n    console.log(\"tx e = \", e);\n    return null;\n  }\n}\n\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { config } from \"../config\";\nimport {\n  getWalletSolBalance,\n  getVaultSolBalance,\n  getUserData\n} from \"../contracts/bean\"\n\nexport const ContractContext = createContext({\n  minersCount: 0,\n  beanRewards: 0,\n  walletSolBalance: 0,\n  contractSolBalance: 0,\n  toggleDataUpdate: () => {},\n});\n\nexport const ContractProvider = ({ children }) => {\n  const [minersCount, setMinersCount] = useState(0);\n  const [beanRewards, setBeanRewards] = useState(0);\n  const [walletSolBalance, setWalletSolBalance] = useState(\"0\");\n  const [contractSolBalance, setContractSolBalance] = useState(\"0\");\n  const [dataUpdate, setDataUpdate] = useState(false);\n\n  const wallet = useWallet();\n  useEffect(() => {\n    getWalletSolBalance(wallet).then(bal => {\n      console.log(\"getWalletSolBalance bal=\", bal);\n      setWalletSolBalance(bal);\n    });\n    getUserData(wallet).then(data => {\n      if (data !== null) {\n        console.log('userData =', data);\n        setBeanRewards(data.beanRewards);\n        setMinersCount(data.miners);\n      }\n    });\n  }, [wallet]);\n\n  useEffect(() => {\n    getVaultSolBalance(wallet).then(bal => {\n      setContractSolBalance(bal);\n    });\n  }, [wallet, dataUpdate]);\n\n  return (\n    <ContractContext.Provider\n      value={{ \n        minersCount,\n        beanRewards,\n        walletSolBalance,\n        contractSolBalance,\n        toggleDataUpdate: () => setDataUpdate(!dataUpdate)\n      }}\n    >\n      {children}\n    </ContractContext.Provider>\n  );\n};\n\nexport const useContractContext = () => useContext(ContractContext);\n\n","import Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/system\";\n\nconst SolInput = styled(\"input\")({\n  fontSize: 24,\n  fontWeight: 500,\n  padding: \"12px 90px 12px 16px\",\n  textAlign: \"right\",\n  borderRadius: 0,\n  border: \"1px solid #555\",\n  background: \"white\",\n  width: \"100%\",\n  outline: \"none\",\n  \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n    WebkitAppearance: \"none\",\n    margin: 0,\n    MozAppearance: \"textfield\",\n  },\n});\n\nexport default function PriceInput({ value, max, onChange = () => {} }) {\n  return (\n    <Box position=\"relative\">\n      <SolInput\n        type=\"number\"\n        min={0}\n        max={max}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n      <Typography\n        fontSize={24}\n        position=\"absolute\"\n        top={9}\n        right={18}\n        fontWeight={500}\n        color=\"black\"\n      >\n        SOL\n      </Typography>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Divider from \"@mui/material/Divider\";\nimport { styled } from \"@mui/system\";\n\nimport { useLocation } from \"react-router-dom\";\nimport { useContractContext } from \"../../providers/ContractProvider\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport PriceInput from \"../../components/PriceInput\";\nimport { useEffect, useState } from \"react\";\nimport { config } from \"../../config\";\nimport { buyEggs, sellEggs, hatchEggs, initialize } from \"../../contracts/bean\";\n\nimport {\n  getWalletSolBalance,\n  getVaultSolBalance,\n  getUserData,\n  getGlobalStateData\n} from \"../../contracts/bean\"\n\nconst CardWrapper = styled(Card)({\n  background: \"transparent\",\n  marginBottom: 24,\n  border: \"5px solid #555\",\n});\n\nconst ButtonContainer = styled(Grid)(({ theme }) => ({\n  [theme.breakpoints.down(\"sm\")]: {\n    flexDirection: \"column\",\n    \"> div\": {\n      marginLeft: 0,\n      marginRight: 0,\n    },\n  },\n}));\n\nconst UnderlinedGrid = styled(Grid)(() => ({\n  borderBottom: '1px solid black'\n}))\n\nexport default function BakeCard() {\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n  /*const { address, chainId } = useAuthContext();*/\n  const { publicKey: address } = useWallet();\n  const [bakeSOL, setBakeSOL] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const query = useQuery();\n  const wallet = useWallet();\n\n  const [minersCount, setMinersCount] = useState(\"0\");\n  const [beanRewards, setBeanRewards] = useState(\"0\");\n  const [walletSolBalance, setWalletSolBalance] = useState(\"0\");\n  const [contractSolBalance, setContractSolBalance] = useState(\"0\");\n  const [dataUpdate, setDataUpdate] = useState(false);\n  const [adminKey, setAdminKey] = useState(null);\n\n  useEffect(() => {\n    getWalletSolBalance(wallet).then(bal => {\n      console.log(\"getWalletSolBalance bal=\", bal);\n      setWalletSolBalance(bal);\n    });\n    getUserData(wallet).then(data => {\n      if (data !== null) {\n        console.log('userData =', data);\n        setBeanRewards(data.beanRewards);\n        setMinersCount(data.miners);\n      } else {\n        setBeanRewards(\"0\");\n        setMinersCount(\"0\");\n      }\n    });\n    getGlobalStateData(wallet).then(data => {\n      if (data != null) {\n        setAdminKey(data.authority);\n      }\n    })\n  }, [wallet, dataUpdate]);\n\n  useEffect(() => {\n    getVaultSolBalance(wallet).then(bal => {\n      setContractSolBalance(bal);\n    });\n  }, [wallet, dataUpdate]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (wallet.publicKey) toggleDataUpdate();\n    }, 5000);\n  });\n\n  const toggleDataUpdate = () => {\n    setDataUpdate(!dataUpdate);\n  }\n\n  const onUpdateBakeSOL = (value) => {\n    setBakeSOL(value);\n  };\n  const getRef = () => {\n    const ref = query.get(\"ref\");\n    return ref;\n  };\n  \n  const initializeProgram = async () => {\n    \n    setLoading(true);\n    try {\n      await initialize(wallet);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n    toggleDataUpdate();\n  };\n\n  const bake = async () => {\n    setLoading(true);\n\n    let ref = getRef();\n    console.log(\"bake: ref=\", ref);\n    if (ref === null) ref = wallet.publicKey;\n    try {\n      await buyEggs(wallet, ref, bakeSOL);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n    toggleDataUpdate();\n  };\n\n  const reBake = async () => {\n    setLoading(true);\n\n    let ref = getRef();\n\n    if (ref === null) ref = wallet.publicKey;\n    try {\n      await hatchEggs(wallet, ref);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n    toggleDataUpdate();\n    \n  };\n\n  const eatBeans = async () => {\n    setLoading(true);\n\n    try {\n      await sellEggs(wallet);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n    toggleDataUpdate();\n  };\n\n  return (\n    <CardWrapper>\n      {loading && <LinearProgress color=\"secondary\" />}\n      <CardContent>\n        <UnderlinedGrid\n          container\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mt={3}\n        >\n          <Typography variant=\"body1\">Contract</Typography>\n          <Typography variant=\"h5\">{contractSolBalance} SOL</Typography>\n        </UnderlinedGrid>\n        <UnderlinedGrid\n          container\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mt={3}\n        >\n          <Typography variant=\"body1\">Wallet</Typography>\n          <Typography variant=\"h5\">{walletSolBalance} SOL</Typography>\n        </UnderlinedGrid>\n        <UnderlinedGrid\n          container\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mt={3}\n        >\n          <Typography variant=\"body1\">Your Beans</Typography>\n          <Typography variant=\"h5\">{minersCount} BEANS</Typography>\n        </UnderlinedGrid>\n        <Box paddingTop={4} paddingBottom={3}>\n          <Box>\n            <PriceInput\n              max={+walletSolBalance}\n              value={bakeSOL}\n              onChange={(value) => onUpdateBakeSOL(value)}\n            />\n          </Box>\n          \n          <Box marginTop={3} marginBottom={3}>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              onClick={initializeProgram}\n              hidden\n              className=\"custom-button\"\n            >\n              Init\n            </Button>\n          </Box>\n\n          <Box marginTop={3} marginBottom={3}>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              disabled={!address || +bakeSOL === 0 || loading}\n              onClick={bake}\n              className=\"custom-button\"\n            >\n              ROAST BEANS\n            </Button>\n          </Box>\n          <Divider />\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            mt={3}\n          >\n            <Typography variant=\"body1\" fontWeight=\"bolder\">\n              Your Rewards\n            </Typography>\n            <Typography variant=\"h5\" fontWeight=\"bolder\">\n              {beanRewards} SOL\n            </Typography>\n          </Grid>\n          <ButtonContainer container>\n            <Grid item flexGrow={1} marginRight={1} marginTop={3}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                fullWidth\n                disabled={!address || loading}\n                onClick={reBake}\n                className=\"custom-button\"\n              >\n                DARK ROAST\n              </Button>\n            </Grid>\n            <Grid item flexGrow={1} marginLeft={1} marginTop={3}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                fullWidth\n                disabled={!address || loading}\n                onClick={eatBeans}\n                className=\"custom-button\"\n              >\n                BREW COFFEE\n              </Button>\n            </Grid>\n          </ButtonContainer>\n        </Box>\n      </CardContent>\n    </CardWrapper>\n  );\n}\n","import CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { styled } from \"@mui/system\";\n\nconst CardWrapper = styled(Card)({\n  background: \"rgb(255 252 248)\",\n  marginBottom: 24,\n  border: \"5px solid #555\",\n});\n\nconst nutritionFacts = [\n  {\n    label: \"Daily Return\",\n    value: 8,\n  },\n  {\n    label: \"APR\",\n    value: \"2,920\",\n  },\n  {\n    label: \"Dev Fee\",\n    value: 3,\n  },\n];\n\nexport default function NutritionFacts() {\n  return (\n    <CardWrapper>\n      <CardContent className=\"fact\">\n        <Typography variant=\"h5\" borderBottom=\"6px solid\" paddingBottom={1} >\n          Caffeine Facts\n        </Typography>\n        \n        <Box paddingTop={2}>\n          {nutritionFacts.map((f) => (\n            <Grid container key={f.label} justifyContent=\"space-between\">\n              <Typography variant=\"body1\" gutterBottom>\n                {f.label}\n              </Typography>\n              <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", flexGrow: 1}}>\n                <div style={{width: \"100%\", height: \"1px\", borderTop: \"1px dotted black\"}}></div>\n              </div>\n              <Typography gutterBottom>{f.value}%</Typography>\n            </Grid>\n          ))}\n        </Box>\n      </CardContent>\n    </CardWrapper>\n  );\n}\n","import CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { styled } from \"@mui/system\";\n\nconst CardWrapper = styled(Card)({\n  background: \"transparent\",\n  border: \"5px solid #555\",\n});\n\nconst Input = styled(\"input\")(({ theme }) => ({\n  fontSize: 10,\n  fontWeight: 300,\n  padding: \"10px 12px\",\n  borderRadius: 0,\n  border: \"1px solid #555\",\n  background: \"white\",\n  width: \"100%\",\n  outline: \"none\",\n  color: theme.palette.primary.main,\n}));\n\nexport default function ReferralLink({ address }) {\n  const link = `${window.origin}?ref=${address}`;\n\n  return (\n    <CardWrapper>\n      <CardContent style={{ paddingLeft: 8, paddingRight: 8 }}>\n        <Typography gutterBottom variant=\"h5\" textAlign=\"center\">\n          Referral Link\n        </Typography>\n        <Input value={address ? link : \"\"} readOnly />\n        <Typography\n          textAlign=\"center\"\n          variant=\"body2\"\n          marginTop={2}\n          paddingX={3}\n        >\n          Earn 12% of the SOL used to roast beans from anyone who uses your\n          referral link\n        </Typography>\n      </CardContent>\n    </CardWrapper>\n  );\n}\n","import Grid from \"@mui/material/Grid\";\n\nimport { config } from \"../../config\";\nimport solIcon from \"../assets/SOLIcon.png\";\nimport tgIcon from \"../assets/TGIcon.png\";\nimport twIcon from \"../assets/TWIcon.png\";\nimport dcIcon from \"../assets/DCIcon.png\";\n\nexport default function Footer() {\n  return (\n    <Grid container justifyContent=\"center\" spacing={2} marginTop={4}>\n     \n    </Grid>\n  );\n}\n","import { flexbox, styled } from \"@mui/system\";\n\nimport Header from \"./components/Header\";\nimport BakeCard from \"./components/BakeCard\";\nimport NutritionFacts from \"./components/NutritionFacts\";\nimport ReferralLink from \"./components/ReferralLink\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport Footer from \"./components/Footer\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n} from '@material-ui/core';\nimport {\n  WalletDialogProvider as MaterialUIWalletDialogProvider,\n  WalletMultiButton as MaterialUIWalletMultiButton,\n  WalletConnectButton\n} from '@solana/wallet-adapter-material-ui';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport backgroundImg from '../assets/background.png';\n\nconst Wrapper = styled(\"div\")(({ theme }) => ({\n  position: 'relative',\n  maxWidth: 500,\n  margin: \"0 auto\",\n  [theme.breakpoints.down(\"sm\")]: {\n    maxWidth: \"100%\",\n  },\n}));\n\nconst WalletButton = styled(\"div\")(() => ({\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}))\n\nexport default function Home() {\n  //const { address } = useAuthContext();\n  const wallet = useWallet();\n\n  return (\n    <div>\n      <Wrapper>\n          <WalletButton>\n            <MaterialUIWalletMultiButton variant=\"text\" style={{\n              border: \"5px solid black\",\n              fontWeight: 900,\n              background: \"transparent\",\n              borderRadius: '10px',\n              color: 'black'\n            }}/>\n          </WalletButton>\n          <Header />\n          <BakeCard />\n          <NutritionFacts />\n          <ReferralLink address={wallet.publicKey && wallet.publicKey.toBase58()} />\n          <Footer />\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n      </Wrapper>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/background.c8fffcdb.png\";","\n\nimport React, { useCallback, useMemo } from 'react';\nimport {\n  WalletDialogProvider as MaterialUIWalletDialogProvider,\n  WalletMultiButton as MaterialUIWalletMultiButton\n} from '@solana/wallet-adapter-material-ui';\nimport { ConnectionProvider, useLocalStorage, WalletProvider } from '@solana/wallet-adapter-react';\nimport {\n  getBitpieWallet,\n  getCoin98Wallet,\n  getLedgerWallet,\n  getMathWallet,\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolongWallet,\n  getTorusWallet\n} from '@solana/wallet-adapter-wallets';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { useSnackbar } from 'notistack';\n\nexport const Wallets = ({children}) => {\n  const endpoint = useMemo(() => clusterApiUrl('devnet'), []);\n  // clusterApiUrl returns a string.\n  // const endpoint = useMemo(() => \"http://localhost:8899\", []);\n  const [autoConnect, setAutoConnect] = useLocalStorage('autoConnect', false);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      getTorusWallet({\n        options: {\n          clientId:\n            'BOM5Cl7PXgE9Ylq1Z1tqzhpydY0RVr8k90QQ85N7AKI5QGSrr9iDC-3rvmy0K_hF0JfpLMiXoDhta68JwcxS1LQ'\n        }\n      }),\n      getLedgerWallet(),\n      getSolongWallet(),\n      getMathWallet(),\n      getSolletWallet(),\n      getCoin98Wallet(),\n      getBitpieWallet()\n    ],\n    []\n  );\n\n  const { enqueueSnackbar } = useSnackbar();\n  const onError = useCallback(\n    (error) => {\n      enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, {\n        variant: 'error'\n      });\n      console.error(error);\n    },\n    [enqueueSnackbar]\n  );\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      \n      <WalletProvider wallets={wallets} onError={onError} autoConnect={autoConnect}>\n        \n        <MaterialUIWalletDialogProvider>\n          \n          {children}\n        </MaterialUIWalletDialogProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};","import { useMemo } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Home from \"./Home\";\n\nimport { Wallets } from './components/wallet'\n\nimport { SnackbarProvider } from 'notistack';\n\nfunction App() {\n\n// I will try to start with new project\n// this project is so stressful\n  return (\n    <BrowserRouter>\n      <Box paddingY={6} paddingX={2}>\n        <SnackbarProvider>\n          <Wallets>\n            <Home />\n          </Wallets>\n        </SnackbarProvider>\n      </Box>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#17215E\",\n    },\n    secondary: {\n      main: \"#f4b52d\",\n    },\n    text: {\n      primary: \"#17215E\",\n    },\n  },\n  typography: {\n    fontFamily: \"Montserrat\",\n    body1: {\n      fontSize: 20,\n    },\n    body2: {\n      fontSize: 16,\n    },\n    allVariants: {\n      color: \"#17215E\",\n    },\n    h4: {\n      fontWeight: 600,\n      fontSize: 32,\n    },\n    h5: {\n      fontSize: 24,\n      fontWeight: 500,\n    },\n  },\n  components: {\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          boxShadow: \"6px 6px 20px 6px #00000096\",\n          borderRadius: 20,\n        },\n      },\n    },\n    MuiCardContent: {\n      styleOverrides: {\n        root: {\n          padding: \"12px 24px\",\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          borderRadius: 8,\n          fontWeight: 400,\n          fontSize: \"1.2rem\",\n          padding: \"10px\",\n          minWidth: 138,\n        },\n        contained: {\n          boxShadow: \"6px 6px 20px 6px #00000096\",\n        },\n        containedSecondary: {\n          color: \"#17215E\",\n        },\n      },\n    },\n  },\n});\n\nexport default function Theme({ children }) {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ThemeProvider from \"./Theme\";\n\nimport { ContractProvider } from \"./providers/ContractProvider\";\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n      <ThemeProvider>\n        <ContractProvider>\n          <App />\n        </ContractProvider>\n      </ThemeProvider>\n  </>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//\n","import { PublicKey } from \"@solana/web3.js\";\n\n\nexport const GLOBAL_STATE_SEED = \"GLOBAL_STATE_SEED\";\nexport const VAULT_SEED = \"VAULT_SEED\";\nexport const USER_STATE_SEED = \"USER_STATE_SEED\";\n\n// todo: for test, it is now one hour\n// export const DAY_IN_MS = 3600 * 1000;\nexport const DAY_IN_MS = 3600 * 24 * 1000;\nexport const DAY_IN_SECS = 3600 * 24;\nexport const HOUR_IN_SECS = 3600;\n// minimum amount to deposit\n// should mul 10**decimals here to get real minimum\nexport const DEPOSIT_MINIMUM_AMOUNT = 100;\n// tier starts from 0\nexport const DEFAULT_MAX_TIER = 2;\n\nexport const NETWORK = \"devnet\";\n\nexport const PROGRAM_ID = new PublicKey(\n  \"557BPiUp8WSumh7PcLpXE12VZppRhiezdHRdfhKAVANn\"\n);\nexport const TREASURY = new PublicKey(\n  \"AWUBKdjcomTH17MusezMp2wcsy5xtSvJAnaZbj3mdW9D\"\n);\n\n"],"sourceRoot":""}